name: Version Bump on main

on:
  push:
    branches:
      - 'main'


jobs:
  version-bump:
    name: Version Bump on Release
    runs-on: ubuntu-latest
    steps:
      - name: Generate App Installation Token
        id: my-app
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: '1'
          token: ${{ steps.my-app.outputs.token }}

      - name: Read .nvmrc from CodeBase
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm

      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Bump Version and Set variables
        shell: bash
        run: |
          npm -f --no-git-tag-version version minor
          echo tag_name=$(echo "v"`cat package.json | jq -r '.version' | less`) >> $GITHUB_ENV

      - name: Setup Git Config
        shell: bash
        run: |
          git config user.name "github-actions-bot"
          git config user.email "<>"

      - name: Publish Changes to different branch
        shell: bash
        run: |
          git checkout -b bump-main-temp
          git add package*
          git commit -m "[skip ci]npm version bump ${{ env.tag_name }}"
          git push origin HEAD:bump-main-temp --force
      
      - name: Create a PR to Main and merge and do everything
        shell: bash
        run: |
          pr_response=$(curl --fail -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ steps.my-app.outputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/pulls -d '{"title":"Bump the NPM Package Version","body":"PR contains the changes to bump package version for Semantic Releases","head":"bump-main-temp","base":"main"}')
          echo $pr_response
          pr_err=$(echo $pr_response | jq -r '.message // empty')
          if [[ -z "$pr_err" ]]; then
              pr_id=$(echo $pr_response | jq -r '.number' | less)
              echo $pr_id
              mrg_response=$(curl --fail -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ steps.my-app.outputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_id/merge" -d '{"commit_title":"[skip ci]Bump Version","commit_message":"Bump Minor Version"}')
              mrg_commit=$(echo $mrg_response | jq -r '.sha' | less)
              echo $mrg_commit
              tag_response=$(curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ steps.my-app.outputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/git/refs -d '{"ref":"refs/tags/${{env.tag_name}}","sha":"'"$mrg_commit"'"}')
              tag_err=$(echo $tag_response | jq -r '.message // empty')
              if [[ -z "$tag_err" ]]; then
                  echo "******"
                  echo "Tag ${{env.tag_name}} was created"
                  echo "******"
                  echo "****Deleting Temporary Branch****"
                  curl --fail -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ steps.my-app.outputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/git/refs/heads/bump-main-temp
              else
                  echo "There was an error while creating the tag"
                  echo $tag_response
                  exit 1
              fi
          else
              echo 'There was an error while creating the Pull Request'
              exit 1
          fi
        
      - name: Create Releases and Generate Release Notes
        uses: indiesdev/curl@v1.1
        with:
          url: https://api.github.com/repos/${{ github.repository }}/releases
          method: "POST"
          accept: 200,201,204
          # headers: '{ "Accept": "application/vnd.github+json", "X-GitHub-Api-Version": "2022-11-28", "Authorization": "Bearer ${{ steps.my-app.outputs.token }}" }'
          body: '{ "tag_name":"${{env.tag_name}}","name":"${{env.tag_name}}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":true, "make_latest":true }'
          timeout: 1000
          bearer-token: ${{ steps.my-app.outputs.token }}
          log-response: true
          retries: 3




          
